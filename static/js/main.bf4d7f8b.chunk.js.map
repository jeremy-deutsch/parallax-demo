{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.js","index.js"],"names":["BASE_ICON_SIZE","MiniLogo","props","proportion","size","src","logo","className","height","width","style","App","useState","logos","setLogos","scrollY","useViewportScroll","scrollYPx","useTransform","scroll","useEffect","newLogos","i","top","Math","floor","random","left","window","innerWidth","push","position","header","marginBottom","overflow","zIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,MAA0B,iC,eCMnCA,EAAiB,IAkDvB,SAASC,EAASC,GAChB,IAAMC,EAAaD,EAAME,KAAOJ,EAChC,OACE,qBACEK,IAAKC,EACLC,UAAU,WACVC,OAAQN,EAAME,KACdK,MAAOP,EAAME,KACbM,MAAO,CAAE,oBAAoB,GAApB,OAAwB,EAAIP,MAK5BQ,MA5Df,WAAgB,IAAD,EACaC,mBAAwB,IADrC,mBACNC,EADM,KACCC,EADD,KAELC,EAAYC,cAAZD,QAEFE,EAAYC,YAAaH,GAAS,SAACI,GAAD,gBAAeA,EAAf,SAmBxC,OAjBAC,qBAAU,WAER,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAZF,GAYiBA,IAAK,CAClC,IAAMC,EAAMC,KAAKC,MAAM,KAAAD,KAAKE,UACtBC,EAAOH,KAAKC,MAChBD,KAAKE,UAAYE,OAAOC,WAAa7B,IAEjCI,EAAOoB,KAAKC,MAAM,IAAAD,KAAKE,UAAoC,GACjEL,EAASS,KACP,qBAAKpB,MAAO,CAAEqB,SAAU,WAAYR,MAAKI,QAAzC,SACE,cAAC1B,EAAD,CAAUG,KAAMA,OAItBU,EAASO,KACR,IAGD,qBAAKd,UAAU,MAAf,SACE,eAAC,IAAOyB,OAAR,CACEzB,UAAU,aACVG,MACE,CACEF,OA/BU,KAgCVuB,SAAU,WACVE,aAAc,IACdC,SAAU,SACV,WAAYjB,GARlB,UAYGJ,EACD,oBAAIH,MAAO,CAAEyB,OAAQ,KAArB,uBACA,oBAAGzB,MAAO,CAAEyB,OAAQ,KAApB,kBACO,8CADP,gCCpCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf4d7f8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { motion, useTransform, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\n\nconst NUM_ICONS = 20;\nconst BASE_ICON_SIZE = 200;\nconst HEADER_HEIGHT = 1500;\n\nfunction App() {\n  const [logos, setLogos] = useState<JSX.Element[]>([]);\n  const { scrollY } = useViewportScroll();\n\n  const scrollYPx = useTransform(scrollY, (scroll) => `${scroll}px`);\n\n  useEffect(() => {\n    const newLogos = [];\n    for (let i = 0; i < NUM_ICONS; i++) {\n      const top = Math.floor(Math.random() * (HEADER_HEIGHT - BASE_ICON_SIZE));\n      const left = Math.floor(\n        Math.random() * (window.innerWidth - BASE_ICON_SIZE)\n      );\n      const size = Math.floor(Math.random() * (BASE_ICON_SIZE - 10)) + 10;\n      newLogos.push(\n        <div style={{ position: \"absolute\", top, left }}>\n          <MiniLogo size={size} />\n        </div>\n      );\n    }\n    setLogos(newLogos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <motion.header\n        className=\"App-header\"\n        style={\n          {\n            height: HEADER_HEIGHT,\n            position: \"relative\",\n            marginBottom: 1000,\n            overflow: \"hidden\",\n            \"--scroll\": scrollYPx,\n          } as any\n        }\n      >\n        {logos}\n        <h1 style={{ zIndex: 100 }}>React App</h1>\n        <p style={{ zIndex: 100 }}>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n      </motion.header>\n    </div>\n  );\n}\n\nfunction MiniLogo(props: { size: number }) {\n  const proportion = props.size / BASE_ICON_SIZE;\n  return (\n    <img\n      src={logo}\n      className=\"parallax\"\n      height={props.size}\n      width={props.size}\n      style={{ \"--proportion-diff\": `${1 - proportion}` } as any}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}